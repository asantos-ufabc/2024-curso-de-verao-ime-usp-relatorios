{
  "hash": "9e2cc73de771c079400eb98fb5309259",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Relatórios reprodutíveis com R\"\nsubtitle: 'Curso de Verão IME-USP 2022' \nauthor: \"Ministrante: Beatriz Milz\"\nformat: \n  revealjs:\n    width: 1600\n    height: 900  \n    toc: false\n    toc_float: true\n    toc-depth: 2\n    toc-location: body\n    toc-title: \"Conteúdos\"\n    logo: \"https://www.ime.usp.br/verao/assets/images/logo_verao.png\" \n    footer: \"Slides por [Beatriz Milz](https://beamilz.com) (@BeaMilz), feito com  [Quarto](https://quarto.org/docs/presentations/revealjs/index.html). Código disponível no [GitHub](https://beatrizmilz.github.io/2023-curso-de-verao-ime-usp-relatorios/).\"\n    theme: [\"custom.scss\"]\n    slide-number: c/t\n    show-slide-number: all\n    hash-type: number\n    preview-links: false    \neditor: visual\n---\n\n\n\n# Introdução ao RMarkdown\n\n-   O que vamos aprender:\n\n-   O que é o RMarkdown\n\n-   Como criar um documento reprodutível com RMarkdown usando R\n\n## Ciclo da ciência de dados\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nknitr::include_graphics(\"https://beatrizmilz.github.io/python-brasil-2021-reticulate/img/environmental-data-science-r4ds-general.png\")\n```\n\n::: {.cell-output-display}\n![](https://beatrizmilz.github.io/python-brasil-2021-reticulate/img/environmental-data-science-r4ds-general.png){fig-align='center' width=65%}\n:::\n:::\n\n\n\nFonte: Conceito do ciclo de ciência de dados apresentado por [Hadley Wickham no livro R for Data Science](https://r4ds.had.co.nz/introduction.html), ilustração por [Allison Horst](https://github.com/allisonhorst).\n\n## Pacote R Markdown\n\n-   Criado e mantido pela [RStudio](https://rstudio.com/)\n\n-   Princípio: arquivos onde escrevemos textos e marcamos com `markdown`, mas também podemos adicionar códigos que são executados.\n\n-   Extensão `.Rmd`\n\n-   Possibilita a utilização de códigos `R`, `Python`, `Markdown`, `HTML`, `CSS`, `SQL`, e outros em um único arquivo.\n\n-   É um **pacote em R**, portanto depende do R.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nknitr::include_graphics(\"https://beatrizmilz.github.io/python-brasil-2021-reticulate/img/hex-rmarkdown.png\")\n```\n\n::: {.cell-output-display}\n![<center><b>Logo: <a href='https://rmarkdown.rstudio.com'>Pacote rmarkdown</a></b></center>](https://beatrizmilz.github.io/python-brasil-2021-reticulate/img/hex-rmarkdown.png){fig-align='center' width=70%}\n:::\n:::\n\n\n\n## Pacote R Markdown\n\n-   A reprodutibilidade é algo importante para o R Markdown.\n\n-   A comunidade de R, e a equipe da RStudio, desenvolveram outros pacotes que integram bem com R Markdown para gerar diversos produtos de análise de dados diferentes, com arquivos .Rmd.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nknitr::include_graphics(\"https://beatrizmilz.github.io/slidesR/img/rmarkdown/markdown.png\")\n```\n\n::: {.cell-output-display}\n![<center><b>Fonte: <a href='https://rmarkdown.rstudio.com'>Pacote `rmarkdown`</a></b></center>](https://beatrizmilz.github.io/slidesR/img/rmarkdown/markdown.png){fig-align='center' width=30%}\n:::\n:::\n\n\n\n## Começando com o R Markdown\n\n-   **Criando um arquivo**:\n\n    -   `File > New File > R Markdown`\n\n-   **Estrutura do arquivo**:\n\n    -   YAML - metadados do documento\n    -   Code chunks - Campos de código (pode receber código em R, SQL, Python, entre outros)\n    -   Textos marcados com Markdown ou HTML\n\n-   **Transformar o .Rmd no arquivo final**\n\n    -   Botão Knit, ou usando o atalho: `Ctrl + Shift + K`\n    -   Boa prática: faça isso com frequência.\n\n## Colocar em prática:\n\n-   Dentro do projeto do RStudio criado, crie uma pasta chamada `relatorio`.\n\n-   Crie um novo arquivo RMarkdown que gera um HTML, e salve ele na pasta `relatorio`. Dê o nome de `primeiro_relatorio.Rmd`.\n\n-   O arquivo já vem com alguns conteúdos para servir de exemplo. Observe a estrutura deste arquivo! Tente imaginar o que será gerado.\n\n-   Aperte o botão `knit` para gerar o resultado final. Veja o resultado: é o que você imaginou?\n\n-   Faça pequenas alterações e aperte o botão `knit` novamente, para ver como ficou. Sugestões:\n\n    -   Altere o título, adicione seu nome, mude a data.\n    -   Escreva algo diferente no corpo do arquivo.\n\n## Markdown\n\n-   O RMarkdown possibilita a utilização da linguagem de marcação simples Markdown. Essa linguagem de marcação foi elaborada para ser fácil de ler e fácil de escrever.\n\n-   Confira as cheatsheets: [`rmarkdown` Cheatsheet 2.0](http://www.rstudio.com/wp-content/uploads/2016/03/rmarkdown-cheatsheet-2.0.pdf) e [`rmarkdown` Cheatsheet](https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf).\n\n-   O RStudio Visual Editor facilita o uso do Markdown no RStudio.\n\n## Colocar em prática:\n\n-   No arquivo criado, experimente marcar os textos com Markdown.\n\n-   Experimente o Visual Mode Editor do RStudio.\n\n-   Adicione um link no seu relatório para a página dos cursos de extensão da USP: https://cursosextensao.usp.br/\n\n## Chunks de Código em R\n\n-   Os chunks são campos onde podemos inserir código de R (ou Python, SQL, Bash...) em um arquivo RMarkdown.\n\n-   Os chunks podem ter rótulos/nomes, para identificar o conteúdo gerado.\n\n-   Existe um atalho do teclado para criar chunks no RStudio: `Ctrl + ALt + I`.\n\n-   Também é possível criar um chunk clicando no seguinte botão do RStudio:\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/create-chunk.png){fig-align='center' width=90%}\n:::\n:::\n\n\n\n## Diretório de trabalho em arquivos `.Rmd`\n\n-   Quando usamos projetos do RStudio, o diretório de trabalho será a pasta principal do projeto.\n\n-   Quando estamos trabalhando com arquivos `.Rmd`, por padrão o diretório de trabalho DO ARQUIVO será a pasta onde o arquivo está localizado.\n\n-   Isso gera confusão! Atenção pois isso pode causar erros. Uma dica para escrever os caminhos de forma correta é utilizar a funcionalidade do RStudio: escreva aspas, coloque o cursor entre as pastas e aperte TAB.\n\n-   Exemplo prático: comparar o uso de `getwd()` dentro e fora de um arquivo `.Rmd`.\n\n-   Para acessar arquivos em pastas que estão em um \"nível\" anterior ao diretório de trabalho, utilize `\"../\"`.\n\n## Colocar em prática:\n\n1)  No arquivo `primeiro-relatorio.Rmd`, crie um chunk e faça a importação da base de dados de pinguins.\n\n``` r\ncaminho <- \"....\" \npinguins <- readr::read_csv(caminho)\ndplyr::glimpse(pinguins)\n```\n\n2)  Lembre-se de se atentar aos caminhos! \n\n\n\n3)  Aperte `knit` e observe o resultado. O código e o resultado deverá aparecer no relatório. Configure as opções de chunk para que apareça corretamente.\n\n## Código inline\n\n-   É útil para adicionar resultados de código em R dentro de parágrafos.\n\n**Exemplo:**\n\nA base mtcars possui 32 carros. As colunas presentes na base são mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, e carb.\n\n**Código Markdown:**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nA base mtcars possui `r nrow(mtcars)` carros.\nAs colunas presentes na base são \n`r knitr::combine_words(names(mtcars), and = \"e \")`.\n```\n:::\n\n\n\n## Colocar em prática:\n\n\n\n::: {.cell}\n\n```{.css .cell-code}\n.colorido{\n  background-color: #FDB525;\n}\n```\n\n\n<style type=\"text/css\">\n.colorido{\n  background-color: #FDB525;\n}\n</style>\n:::\n\n\n\n\n\n1 ) O trecho a seguir apresenta um texto com resultados feitos com inline code. Adicione o seguinte código no seu relatório (o arquivo `primeiro_relatorio.Rmd`), substituindo os trechos coloridos por inline code:\n\nA base de dados pinguins apresenta dados referente à [344]{.colorido} pinguins, das seguintes espécies: [Pinguim-de-adélia, Pinguim-gentoo, e Pinguim-de-barbicha]{.colorido}. Os dados foram coletados entre os anos [2007]{.colorido} e [2009]{.colorido}, nas seguintes ilhas: [Torgersen, Biscoe, e Dream]{.colorido}. O peso médio dos pinguins amostrados foi de [42]{.colorido} kg. Os dados foram obtidos através do pacote [Palmer Penguins](https://allisonhorst.github.io/palmerpenguins/).\n\n## Tabelas com R\n\n-   Várias opções: `knitr::kable()`, `DT::datatable()` , `reactable::reactable()`, entre outras.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npinguins |>\n  dplyr::count(especie, sort = TRUE) |>\n  knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|especie             |   n|\n|:-------------------|---:|\n|Pinguim-de-adélia   | 152|\n|Pinguim-gentoo      | 124|\n|Pinguim-de-barbicha |  68|\n\n\n:::\n:::\n\n\n\n## Colocar em prática:\n\n1)  Adicione a seguinte tabela no seu relatório, usando a função `kable()`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquantidade_de_especies <- pinguins |>\n  dplyr::count(especie, sort = TRUE) |>\n  janitor::adorn_totals()\n```\n:::\n\n\n\nEla deverá ficar assim:\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|Espécie             | Quantidade|\n|:-------------------|----------:|\n|Pinguim-de-adélia   |        152|\n|Pinguim-gentoo      |        124|\n|Pinguim-de-barbicha |         68|\n|Total               |        344|\n\n\n:::\n:::\n\n\n\n## Adicionando um gráfico\n\n- Coloque o código usado para criar um gráfico em um chunk. Ex:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(ggplot2)\npinguins |> \n  dplyr::count(especie) |> \n  ggplot() +\n  geom_col(aes(x = n, y = especie, fill = especie), show.legend = FALSE) +\n  theme_light() +\n  scale_fill_viridis_d() +\n  labs(x = \"Quantidade de pinguins\", y = \"Espécies\")\n```\n\n::: {.cell-output-display}\n![](extra-1-intro-rmarkdown_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n## Colocar em prática:\n\n1)  Adicione um gráfico no seu relatório, utilizando a base `pinguins`.\n\n2) Caso não tenha experiência com ggplot, um gráfico simples pode ser gerado com esse código:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(ggplot2)\npinguins |> \n  ggplot() +\n  geom_point(aes(x = comprimento_bico, y = profundidade_bico, color = especie)) +\n  theme_light() +\n  scale_color_viridis_d() +\n  labs(x = \"Comprimento do bico\", \n       y = \"Profundidade do bico\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](extra-1-intro-rmarkdown_files/figure-html/unnamed-chunk-12-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n\n\n\n\n## Revisão - R Markdown\n\n-   O pacote rmarkdown possibilita adicionar textos e códigos em um único arquivo.\n\n-   Podemos utilizar códigos em R, Python, Markdown, HTML, CSS, SQL, e outros no RMarkdown.\n\n-   O uso do RMarkdown depende do uso do R.\n\n-   O arquivo RMarkdown é estruturado em: YAML (metadados), textos marcados e campos de código (chamados de chunks).\n\n-   Markdown é uma linguagem de marcação que possibilita marcar textos. Essa linguagem é utilizada nos arquivos RMarkdown e em muitos outros lugares.\n",
    "supporting": [
      "extra-1-intro-rmarkdown_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}